## Release Buddy

#### Prep

* Check bugzilla for showstoppers

#### Create/Update the configfile for this release

* If making a new major release you will need to create a brand new configfile.

   Use _buddy-create-cffile.py_ to create the new configfile.
   For example to create a new configfile for the KDE SC 4.9 release:

   % buddy-create-cffile.py kde-4.9.rc

   Once the configfile is created you must hand-edit, changing a few of the
   settings near the top of the file as needed.

* If simply changing the minor version or patch level then you can edit the
  associated settings for Minor or Patch in the configfile.  Not much else
  should need to be changed.

* Inspecting the configfile for a KDE SC release, you should see many projects
  listed along with their descriptions. If you don't see this long list,
  something went terribly long.

#### Checkout writable repos

* The _buddy-checkouts.py_ program is used to checkout a read-write copy of
  the all the project repositories.  When completed, you will find all the
  repositories in TOP/kde-VERSION/sources.

* You might want to make a dry-run before doing the real checkouts.
  Pass the "--dry-run" option to _buddy-checkouts.py_ if you want to do this.

* By default, a log of the checkouts will be saved to the file "checkout.log"
  in your current working dir, but you can change the logfile with the 
  "--logFile=/path/to/logfile" option.

* __TODO__ switch to the KDE/Major.Minor branch as needed

#### Make changes to the repos as needed, for example:

* This is a the hard part. There are lots of tweaks to make now, for instance:

  Update version numbers for:
  * kdelibs/CMakeLists.txt
  * kdepimlibs/CMakeLists.txt
  * kde-baseapps/CMakeLists.txt
  * kde-runtime/CMakeLists.txt
  * kde-workspace/CMakeLists.txt
  * kdelibs/kdecore/sycoca/ksycoca.cpp --> ksycoca version number
  * kdelibs/README
  * kdenetwork/kopete/libkopete/kopeteversion.h
  * gwenview/lib/version.h
  * kdepim/CMakeLists.txt (KDEPIM_DEV_VERSION / KDEPIM_VERSION)
  * kdepim-runtime/CMakeLists (KDEPIM_RUNTIME_DEV_VERSION and KDEPIM_RUNTIME_VERSION)
  * for koffice: configure.in.in, lib/kofficecore/kofficeversion.h, etc.
  * common and versions scripts

  Create index.cache.bz2 files for all docbooks

  % meinproc4 --cache index.cache.bz2 index.docbook

  __TODO__  Make a setting for MEINPROC in the buddy configfile?
            Use the meinproc for the major release... so when bootstrapping to the next major release
            we'll have a problem maybe... ie. use meinproc5 when going to 5.0.0pre

  fixuifiles

  Update kdepackages in kdelibs/kdeui

  In the stable branch, remove the MALLOC_CHECK_ block from kdebase/workspace/startkde.cmake

#### Create tags (but don't push tags)
  
* __TODO__ Use buddy-createtag

* __TODO__ Ensure clean repos??

* _buddy-createtag.py_ makes a tag for each project with the name "vVERSION"

* The tag is created from the current branch. __TODO_ switch to branch KDE/Major.Minor as needed.

* At this point the tags __ARE NOT PUSHED__

#### Create tarball

* Use _buddy-pack.py_

* __TODO__ currently buddy-pack.py uses CPack.  Let's dump that.

* __TODO__ Ensure clean repos??

* basically we want to 
  
  % (cd kde-VERSION/project; tar Jcvf kde-VERSION/tarballs/project-VERSION.tar.xz --exclude .git|.svn .)

#### Upload for Packager testing

* __TODO__ Let's write a program that ftp's the test tarballs to incoming.kde.org

* run sha256sum *.xz and put that info in the sysadmin bug report when
  the request to move them from incoming to the final place is made.

  *Note:* the sysadmins run sha256sum -c to validate the .xz files
  before moving them from /incoming to the final place

#### Push the Tags

* Push the tags after a few days of packager testing. (do we need to wait longer?)

* __TODO__ Write _buddy-pushtags.py_ for this task

#### kdelibs

* When moving to new minor versions (i.e. 4.8 to 4.9), we are permitted to
  branch kdelibs for versioning purposes.
  As dfaure says: "I'm opposed to new branches to maintain. Switching to
  "bugfixes in 4.8" to "bugfixes in 4.9, 4.8 is dead" doesn't increase the
  number of branches to maintain, so that's fine."

#### kde-l10n?

* __TODO__

#### Branching

* __TODO__ give bcooksley and PoVAddict a python program that branches
  each project and optionally pushes that new branch
  (options: --create-only, --dry-run)
